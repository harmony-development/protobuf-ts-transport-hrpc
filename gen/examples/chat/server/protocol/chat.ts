// @generated by protobuf-ts 2.0.7 with parameter long_type_string,force_optimize_code_size
// @generated from protobuf file "examples/chat/server/protocol/chat.proto" (package "chat", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * A chat message.
 *
 * @generated from protobuf message chat.Message
 */
export interface Message {
    /**
     * @generated from protobuf field: string content = 1;
     */
    content: string;
}
/**
 * An empty message.
 *
 * @generated from protobuf message chat.Empty
 */
export interface Empty {
}
// @generated message type with reflection information, may provide speed optimized methods
class Message$Type extends MessageType<Message> {
    constructor() {
        super("chat.Message", [
            { no: 1, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message chat.Message
 */
export const Message = new Message$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Empty$Type extends MessageType<Empty> {
    constructor() {
        super("chat.Empty", []);
    }
}
/**
 * @generated MessageType for protobuf message chat.Empty
 */
export const Empty = new Empty$Type();
/**
 * @generated ServiceType for protobuf service chat.Chat
 */
export const Chat = new ServiceType("chat.Chat", [
    { name: "SendMessage", options: {}, I: Message, O: Empty },
    { name: "StreamMessages", serverStreaming: true, options: {}, I: Empty, O: Message }
]);
